{
  "data": [
    {
      "name": "clear_status",
      "command": "*CLS",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Clear all buffers",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "reset_settings",
      "command": "*RST",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Reset settings",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "get_identification",
      "command": "*IDN?",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Get Instrument identification",
      "params": [],
      "return": {
        "description": "",
        "type": "STRING"
      }
    },
    {
      "name": "set_channel_volts_scale_ch1",
      "command": "CH1:VOLts {}",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Sets the vertical gain of the channel 1.",
      "params": [
        {
          "position": 1,
          "type": "FLOAT",
          "example": "5.0",
          "description": "Vertical gain of the channel 1 in volts."
        }
      ],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_channel_volts_scale_ch2",
      "command": "CH2:VOLts {}",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Sets the vertical gain of the channel 2.",
      "params": [
        {
          "position": 1,
          "type": "FLOAT",
          "example": "5.0",
          "description": "Vertical gain of the channel 2 in volts."
        }
      ],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_channel_probe_ch1_1x",
      "command": "CH1:PRObe 1",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "1X attenuation",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_channel_probe_ch1_10x",
      "command": "CH1:PRObe 10",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "10X attenuation",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_channel_probe_ch1_20x",
      "command": "CH1:PRObe 20",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "20X attenuation",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_channel_probe_ch1_50x",
      "command": "CH1:PRObe 50",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "50X attenuation",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_channel_probe_ch1_100x",
      "command": "CH1:PRObe 100",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "100X attenuation",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_channel_probe_ch1_500x",
      "command": "CH1:PRObe 500",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "500X attenuation",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_channel_probe_ch1_1000x",
      "command": "CH1:PRObe 1000",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "1000X attenuation",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_channel_probe_ch2_1x",
      "command": "CH2:PRObe 1",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "1X attenuation",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_channel_probe_ch2_10x",
      "command": "CH2:PRObe 10",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "10X attenuation",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_channel_probe_ch2_20x",
      "command": "CH2:PRObe 20",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "20X attenuation",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_channel_probe_ch2_50x",
      "command": "CH2:PRObe 50",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "50X attenuation",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_channel_probe_ch2_100x",
      "command": "CH2:PRObe 100",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "100X attenuation",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_channel_probe_ch2_500x",
      "command": "CH2:PRObe 500",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "500X attenuation",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_channel_probe_ch2_1000x",
      "command": "CH2:PRObe 1000",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "1000X attenuation",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_timebase_scale",
      "command": "HORizontal:MAIn:SCAle {}",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Sets the time per division for the main time base.",
      "params": [
        {
          "position": 1,
          "type": "FLOAT",
          "example": "2.5",
          "description": "Time per division in seconds."
        }
      ],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_timebase_mode_xy",
      "command": "DISplay:FORMat XY",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "XY displays the voltage of channel 1 (horizontal axis) against the voltage of channel 2 (vertical axis). NOTE: Setting the display format to XY turns cursors off. Sending the CURSor:FUNCtion command when the display format is XY causes the oscilloscope to generate event 221 (Settings conflict) and leaves the display in XY format.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_timebase_mode_yt",
      "command": "DISplay:FORMat YT",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "YT sets the display to vertical values versus time format and is the default mode.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_timebase_x_channel_ch1",
      "command": "MEASUrement:IMMed:SOUrce1 CH1",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Timebase x on channel 1",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_timebase_x_channel_ch2",
      "command": "MEASUrement:IMMed:SOUrce1 CH2",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Timebase x on channel 2",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_timebase_y_channel_ch1",
      "command": "MEASUrement:IMMed:SOUrce2 CH1",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Timebase y on channel 1",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_timebase_y_channel_ch2",
      "command": "MEASUrement:IMMed:SOUrce2 CH2",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Timebase y on channel 2",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "get_is_in_acquisitions_state",
      "command": "*OPC?",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Ask if it's in acquisitions state",
      "params": [],
      "return": {
        "description": "",
        "type": "STRING"
      }
    },
    {
      "name": "stop_acquisitions",
      "command": "ACQuire:STATE STOP",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Stop all acquisitions",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_acquisition_mode_sample",
      "command": "ACQuire:MODe SAMple",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "SAMple specifies that the displayed data point value is the first sampled value that was taken during the acquisition interval. The waveform data has 8 bits of precision in all acquisition modes. You can request 16 bit data with a CURVe? query, but the lower-order 8 bits of data will be zero. SAMple is the default mode.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_acquisition_mode_peakdetect",
      "command": "ACQuire:MODe PEAKdetect",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "PEAKdetect specifies the display of the high-low range of the samples taken from a single waveform acquisition. The oscilloscope displays the high-low range as a vertical range that extends from the highest to the lowest value sampled during the acquisition interval. PEAKdetect mode can reveal the presence of aliasing.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_acquisition_mode_average",
      "command": "ACQuire:MODe AVErage",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "AVErage specifies averaging mode, where the resulting waveform shows an average of SAMple data points from several separate waveform acquisitions. The number of waveform acquisitions that go into making up the average waveform is set or queried using the ACQuire:NUMAVg command.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "get_acquisition_mode",
      "command": "ACQuire:MODe?",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Ask for acquisition mode",
      "params": [],
      "return": {
        "description": "",
        "type": "STRING"
      }
    },
    {
      "name": "set_average_acquisition_mode_samples_amount_4",
      "command": "ACQuire:NUMAVg 4",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Sets the number of oscilloscope waveform acquisitions that make up an averaged waveform to 4",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_average_acquisition_mode_samples_amount_16",
      "command": "ACQuire:NUMAVg 16",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Sets the number of oscilloscope waveform acquisitions that make up an averaged waveform to 16",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_average_acquisition_mode_samples_amount_64",
      "command": "ACQuire:NUMAVg 64",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Sets the number of oscilloscope waveform acquisitions that make up an averaged waveform to 64",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_average_acquisition_mode_samples_amount_128",
      "command": "ACQuire:NUMAVg 128",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Sets the number of oscilloscope waveform acquisitions that make up an averaged waveform to 128",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "force_trigger",
      "command": "TRIGger FORCe",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Force trigger",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_trigger_mode_auto",
      "command": "TRIGger:MAIn:MODe AUTO",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "AUTO generates a trigger if a trigger is not detected within a specific time period. AUTO also enables scan mode for sweep speeds of 100 ms/div and slower.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_trigger_mode_normal",
      "command": "TRIGger:MAIn:MODe NORMal",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "NORMal waits for a valid trigger event.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_trigger_type_edge",
      "command": "TRIGger:MAIn:TYPe EDGE",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "EDGE is a normal trigger. A trigger event occurs when a signal passes through a specified voltage level in the specified direction and is controlled by the TRIGger:MAIn:EDGE commands.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_trigger_type_video",
      "command": "TRIGger:MAIn:TYPe VIDeo",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "VIDeo specifies that a trigger occurs when a specified signal is found and is controlled by the TRIGger:MAIn:VIDeo commands.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_trigger_type_pulse",
      "command": "TRIGger:MAIn:TYPe PULse",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "PULse specifies that a trigger occurs when the specified signal meets the pulse width criteria that is controlled by the TRIGger: MAIn:PULse commands.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "get_trigger_type",
      "command": "TRIGger:MAIn:TYPe?",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Get trigger type",
      "params": [],
      "return": {
        "description": "",
        "type": "STRING"
      }
    },
    {
      "name": "set_trigger_edge_type_fall",
      "command": "TRIGger:MAIn:EDGE:SLOpe FALL",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "FALL specifies to trigger on the falling or negative edge of a signal.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_trigger_edge_type_rise",
      "command": "TRIGger:MAIn:EDGE:SLOpe RISe",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "RISe specifies to trigger on the rising or positive edge of a signal.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_trigger_edge_source_ch1",
      "command": "TRIGger:MAIn:EDGE:SOUrce CH1",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "CH1 specifies channel 1 as source.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_trigger_edge_source_ch2",
      "command": "TRIGger:MAIn:EDGE:SOUrce CH2",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "CH2 specifies channel 2 as source.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_trigger_edge_source_ext",
      "command": "TRIGger:MAIn:EDGE:SOUrce EXT",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "EXT specifies the external input.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_trigger_edge_source_ext5",
      "command": "TRIGger:MAIn:EDGE:SOUrce EXT5",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "EXT5 specifies that the external input is attenuated by a factor of 5.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_trigger_edge_source_acline",
      "command": "TRIGger:MAIn:EDGE:SOUrce AC LINE",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "AC LINE specifies the power line signal as a trigger source.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_trigger_level",
      "command": "TRIGger:MAIn:LEVel {}",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Sets de oscilloscope edge and pulse width trigger level.",
      "params": [
        {
          "position": 1,
          "type": "FLOAT",
          "example": "1.4",
          "description": "Main trigger level, in volts."
        }
      ],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "get_waveform_data",
      "command": "CURVE?",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Transfers oscilloscope waveform data to and from the oscilloscope in binary or ASCII format. Each waveform that is transferred has an associated waveform preamble that contains information such as data format and scale.",
      "params": [],
      "return": {
        "description": "Raw bytes representing curve",
        "type": "BYTES"
      }
    },
    {
      "name": "set_waveform_bytes_width_1",
      "command": "DATa:WIDth 1",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Sets 1 byte per waveform data point to be transferred when executing the CURVe command.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_waveform_bytes_width_2",
      "command": "DATa:WIDth 2",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Sets 2 bytes per waveform data point to be transferred when executing the CURVe command.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_waveform_encoding_ascii",
      "command": "DATa:ENCdg ASCIi",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "ASCIi specifies the ASCII representation of signed integer (RIBinary) data. If this is the value at power-on, the WFMPre values for BN_Fmt, BYT_Or, and ENCdg are set as RP, MSB, and ASC respectively",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_waveform_encoding_ribinary",
      "command": "DATa:ENCdg RIBinary",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "RIBinary specifies signed integer data-point representation with the most significant byte transferred first. This format results in the fastest data transfer rate when DATa:WIDth is set to 2. \nThe range is \u2013128 to 127 when DATa:WIDth is 1. Zero is center screen. The range is \u201332768 to 32767 when DATa:WIDth is 2. The upper limit is one division above the top of the screen and the lower limit is one division below the bottom of the screen.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_waveform_encoding_rpbinary",
      "command": "DATa:ENCdg RPBinary",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "RPBinary specifies positive integer data-point representation with the most significant byte transferred first. \nThe range is 0 to 255 when DATa:WIDth is 1. Center screen is 127. The range is 0 to 65,535 when DATa:WIDth is 2. The upper limit is one division above the top of the screen and the lower limit is one division below the bottom of the screen.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_waveform_encoding_sribinary",
      "command": "DATa:ENCdg SRIbinary",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "SRIbinary is the same as RIBinary except that the byte order is swapped, meaning that the least significant byte is transferred first. This format is useful when transferring data to IBM compatible PCs.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_waveform_encoding_srpbinary",
      "command": "DATa:ENCdg SRPbinary",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "SRPbinary is the same as RPBinary except that the byte order is swapped, meaning that the least significant byte is transferred first. This format is useful when transferring data to IBM compatible PCs.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "get_waveform_encoding",
      "command": "DATa:ENCdg?",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Get waveform encoding",
      "params": [],
      "return": {
        "description": "",
        "type": "STRING"
      }
    },
    {
      "name": "set_waveform_source_ch1",
      "command": "DATa:SOUrce CH1",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Sets Channel 1 to be the waveform source data",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_waveform_source_ch2",
      "command": "DATa:SOUrce CH2",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Sets Channel 2 to be the waveform source data",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_waveform_source_math",
      "command": "DATa:SOUrce MATH",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Sets MATH to be the waveform source data",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_waveform_source_refa",
      "command": "DATa:SOUrce REFA",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Sets REF A to be the waveform source data",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_waveform_source_refb",
      "command": "DATa:SOUrce REFB",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Sets REF B to be the waveform source data",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_waveform_points_format_env",
      "command": "WFMPre:PT_Fmt ENV",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "ENV specifies that the oscilloscope transmit the waveform as minimum and maximum point pairs. Peak detect waveforms use ENV format. Peak Detect mode specifies a maximum of 1250 (minimum, maximum) pairs, with the time between pairs being 2*XINcr.\nThe magnitudes and times of ENV format waveform points can be calculated using the same formulas used for Y format, as long as you recognize that the points consist of (minimum, maximum) pairs, where each pair was collected over a time period of 2*XINcr.\nThus, the samples for n=0 (a minimum) and n=1 (a maximum), the first (minimum, maximum) pair, were collected over a time interval of width 2*XINcr, that began at the time found by setting n to zero in the formula. The next pair were collected over the interval that began at the time found by setting n to 2 in the formula, and so on.",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "set_waveform_points_format_y",
      "command": "WFMPre:PT_Fmt Y",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Y specifies a normal waveform where one ASCII or binary data point is transmitted for each point in the waveform record. \nFor Y format, the time (absolute coordinate) of a point, relative to the trigger, can be calculated using the following formula. N ranges from 0 to 2499. \nXn = XZEro + XINcr (n - PT_OFf) \nFor Y format, the magnitude (usually voltage, relative to ground) (absolute coordinate) of a point can be calculated: \nYn = YZEro + YMUIty (yn - YOFf)",
      "params": [],
      "return": {
        "description": "",
        "type": "VOID"
      }
    },
    {
      "name": "get_waveform_vertical_scale_factor",
      "command": "WFMPre:YMUlt?",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Query the vertical scale factor",
      "params": [],
      "return": {
        "description": "",
        "type": "STRING"
      }
    },
    {
      "name": "get_waveform_conversion_factor",
      "command": "WFMPre:YZEro?",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Query the waveform conversion factor",
      "params": [],
      "return": {
        "description": "",
        "type": "STRING"
      }
    },
    {
      "name": "get_waveform_vertical_offset",
      "command": "WFMPre:YOFf?",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Query the vertical offset",
      "params": [],
      "return": {
        "description": "",
        "type": "STRING"
      }
    },
    {
      "name": "get_waveform_horizontal_sampling_interval",
      "command": "WFMPre:XINcr?",
      "instrument_id": 1,
      "type": "SCPI",
      "description": "Query the horizontal sampling interval",
      "params": [],
      "return": {
        "description": "",
        "type": "STRING"
      }
    },
    {
      "name": "init_camera",
      "command": "init",
      "instrument_id": 2,
      "type": "CLIB",
      "description": "Provide a full description of what this command intends to do",
      "lib_file_name": "libpixelflyqe.dll",
      "params": [
        {
          "position": 1,
          "type": "INT",
          "example": "5",
          "description": "Documentation for param"
        },
        {
          "position": 2,
          "type": "FLOAT",
          "example": "5.0",
          "description": "Documentation for param"
        }
      ],
      "return": {
        "type": "INT",
        "description": "Provide an explanation of return values for documentation purposes"
      }
    },
    {
      "name": "get_image",
      "command": "get_image",
      "instrument_id": 2,
      "type": "CLIB",
      "description": "Provide a full description of what this command intends to do",
      "lib_file_name": "libpixelflyqe.dll",
      "params": [],
      "return": {
        "type": "BYTES",
        "description": "Provide an explanation of return values for documentation purposes"
      }
    },
    {
      "name": "close_cammera",
      "command": "close",
      "instrument_id": 2,
      "type": "CLIB",
      "description": "Provide a full description of what this command intends to do",
      "lib_file_name": "libpixelflyqe.dll",
      "params": [],
      "return": {
        "type": "INT",
        "description": "Provide an explanation of return values for documentation purposes"
      }
    }
  ]
}